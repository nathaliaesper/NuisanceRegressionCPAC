%YAML 1.1
---
# CPAC Pipeline Configuration YAML file
# Version 1.8.4.dev
#
# http://fcp-indi.github.io for more info.
#
# Tip: This file can be edited manually with a text editor for quick modifications.

FROM: default

pipeline_setup: 

  # Name for this pipeline configuration - useful for identification.
  pipeline_name: cpac_preproc

  working_directory: 

    # Deletes the contents of the Working Directory after running.
    # This saves disk space, but any additional preprocessing or analysis will have to be completely re-run.
    remove_working_dir: Off

  log_directory: 

    path: /outputs/log

  system_config: 

    # Select Off if you intend to run CPAC on a single machine.
    # If set to On, CPAC will attempt to submit jobs through the job scheduler / resource manager selected below.
    on_grid: 

      SGE: 

        # SGE Parallel Environment to use when running CPAC.
        # Only applies when you are running on a grid or compute cluster using SGE.
        parallel_environment: cpac

    # The maximum amount of memory each participant's workflow can allocate.
    # Use this to place an upper bound of memory usage.
    # - Warning: 'Memory Per Participant' multiplied by 'Number of Participants to Run Simultaneously'
    #   must not be more than the total amount of RAM.
    # - Conversely, using too little RAM can impede the speed of a pipeline run.
    # - It is recommended that you set this to a value that when multiplied by
    #   'Number of Participants to Run Simultaneously' is as much RAM you can safely allocate.
    maximum_memory_per_participant: 15.0

    # The maximum amount of cores (on a single machine) or slots on a node (on a cluster/grid)
    # to allocate per participant.
    # - Setting this above 1 will parallelize each participant's workflow where possible.
    #   If you wish to dedicate multiple cores to ANTS-based anatomical registration (below),
    #   this value must be equal or higher than the amount of cores provided to ANTS.
    # - The maximum number of cores your run can possibly employ will be this setting multiplied
    #   by the number of participants set to run in parallel (the 'Number of Participants to Run
    #   Simultaneously' setting).
    max_cores_per_participant: 20

    # The number of cores to allocate to ANTS-based anatomical registration per participant.
    # - Multiple cores can greatly speed up this preprocessing step.
    # - This number cannot be greater than the number of cores per participant.
    num_ants_threads: 3

    # Full path to the FSL version to be used by CPAC.
    # If you have specified an FSL path in your .bashrc file, this path will be set automatically.
    FSLDIR: FSLDIR

  Amazon-AWS: 

    # Enable server-side 256-AES encryption on data to the S3 bucket
    s3_encryption: On

segmentation: 

  tissue_segmentation: 

    Template_Based: 

      # These masks should be in the same space of your registration template, e.g. if
      # you choose 'EPI Template' , below tissue masks should also be EPI template tissue masks.
      #
      # Options: ['T1_Template', 'EPI_Template']
      template_for_segmentation: []

registration_workflows: 

  functional_registration: 

    EPI_registration: 

      ANTs: 

        # EPI registration configuration - synonymous with T1_registration
        # parameters under anatomical registration above
        parameters: 

nuisance_corrections: 

  2-nuisance_regression: 

    # Select which nuisance signal corrections to apply
    Regressors: 
      - Bandpass:
          bottom_frequency: 0.01
          top_frequency: 0.1
        CerebrospinalFluid:
          erode_mask: On
          extraction_resolution: 2
          summary: Mean
        Motion:
          include_delayed: On
          include_delayed_squared: On
          include_squared: On
        Name: Regressor-aCompCor
        PolyOrt:
          degree: 2
        aCompCor:
          extraction_resolution: 2
          summary:
            components: 5
            method: DetrendPC
          tissues:
          - WhiteMatter
          - CerebrospinalFluid
      - Bandpass:
          bottom_frequency: 0.01
          top_frequency: 0.1
        CerebrospinalFluid:
          erode_mask: On
          extraction_resolution: 2
          summary: Mean
        Motion:
          include_delayed: On
          include_delayed_squared: On
          include_squared: On
        Name: Regressor-36motion-default
        PolyOrt:
          degree: 2
      - Bandpass:
          bottom_frequency: 0.01
          top_frequency: 0.1
        CerebrospinalFluid:
          erode_mask: On
          extraction_resolution: 2
          summary: Mean
        Motion:
          include_delayed: On
          include_delayed_squared: On
          include_squared: On
        Name: Regressor-lineardetrend
        PolyOrt:
          degree: 1
      - Bandpass:
          bottom_frequency: 0.01
          top_frequency: 0.1
        Censor:
          method: Kill
          thresholds:
          - type: FD_J
            value: 0.2
        CerebrospinalFluid:
          erode_mask: On
          extraction_resolution: 2
          summary: Mean
        Motion:
          include_delayed: On
          include_delayed_squared: On
          include_squared: On
        Name: Regressor-scrubbing-jenkinson
        PolyOrt:
          degree: 2
      - Bandpass:
          bottom_frequency: 0.01
          top_frequency: 0.1
        Censor:
          method: Kill
          thresholds:
          - type: FD_P
            value: 0.2
        CerebrospinalFluid:
          erode_mask: On
          extraction_resolution: 2
          summary: Mean
        Motion:
          include_delayed: On
          include_delayed_squared: On
          include_squared: On
        Name: Regressor-scrubbing-power
        PolyOrt:
          degree: 2
      - Bandpass:
          bottom_frequency: 0.01
          top_frequency: 0.1
        Censor:
          method: SpikeRegression
          thresholds:
          - type: FD_J
            value: 0.2
        CerebrospinalFluid:
          erode_mask: On
          extraction_resolution: 2
          summary: Mean
        Motion:
          include_delayed: On
          include_delayed_squared: On
          include_squared: On
        Name: Regressor-SpikeRegression
        PolyOrt:
          degree: 2
      - Bandpass:
          bottom_frequency: 0.01
          top_frequency: 0.1
        Censor:
          method: SpikeRegression
          thresholds:
          - type: FD_P
            value: 0.2
        CerebrospinalFluid:
          erode_mask: On
          extraction_resolution: 2
          summary: Mean
        Motion:
          include_delayed: On
          include_delayed_squared: On
          include_squared: On
        Name: Regressor-SpikeRegression
        PolyOrt:
          degree: 2

timeseries_extraction: 

  connectivity_matrix: 

    # Create a connectivity matrix from timeseries data

    # Options:
    #  ['AFNI', 'Nilearn', 'ndmg']
    using: [Nilearn, AFNI]

    # Options:
    #  ['Pearson', 'Partial']
    # Note: These options are not configurable for ndmg, which will ignore these options
    measure: [Pearson]

amplitude_low_frequency_fluctuation: 

  # ALFF & f/ALFF
  # Calculate Amplitude of Low Frequency Fluctuations (ALFF) and fractional ALFF (f/ALFF) for all voxels.
  run: Off

regional_homogeneity: 

  # ReHo
  # Calculate Regional Homogeneity (ReHo) for all voxels.
  run: Off

voxel_mirrored_homotopic_connectivity: 

  # VMHC
  # Calculate Voxel-mirrored Homotopic Connectivity (VMHC) for all voxels.
  run: Off

network_centrality: 

  # Calculate Degree, Eigenvector Centrality, or Functional Connectivity Density.
  run: Off